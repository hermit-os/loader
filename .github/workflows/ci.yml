name: CI

on:
  push:
    branches:
      - staging
      - trying
  pull_request:

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Install NASM
        run: |
          sudo apt-get update
          sudo apt-get install nasm
      - uses: actions/checkout@v3
      - name: Clippy
        run: cargo xtask clippy
        env:
          RUSTFLAGS: -Dwarnings
  
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check Formatting
        run: cargo fmt -- --check

  integration-test:
    name: Integration Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, x86_64-uefi, aarch64]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install QEMU, NASM (ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install qemu-system-x86 qemu-system-arm nasm
      - name: Install QEMU, NASM (macos)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install qemu nasm
      - name: Install QEMU, NASM (windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install qemu --version 2021.12.15
          echo "C:\Program Files\qemu" >> $GITHUB_PATH
          choco install nasm
          echo "C:\Program Files\NASM" >> $GITHUB_PATH
      - uses: actions/checkout@v3
        with:
            lfs: true
      - name: Build
        run: cargo xtask build --arch ${{ matrix.arch }}
        env:
          HERMIT_APP: ${{ github.workspace }}/data/${{ matrix.arch }}/hello_world
      - name: Run loader (x86_64)
        if: matrix.arch == 'x86_64'
        run: |
          qemu-system-x86_64 \
            -cpu qemu64,apic,fsgsbase,fxsr,rdrand,rdtscp,xsave,xsaveopt \
            -smp 1 -m 64M \
            -device isa-debug-exit,iobase=0xf4,iosize=0x04 \
            -display none -serial stdio \
            -kernel target/x86_64/debug/rusty-loader \
            -initrd data/x86_64/hello_world
      - name: Run loader (aarch64)
        if: matrix.arch == 'aarch64'
        run: |
          qemu-system-aarch64 \
            -machine virt,gic-version=max -cpu cortex-a72 -smp 1 -m 512M \
            -display none -serial stdio -semihosting \
            -kernel target/aarch64/debug/rusty-loader
      - name: Build (release)
        run: cargo xtask build --arch ${{ matrix.arch }} --release
        env:
          HERMIT_APP: ${{ github.workspace }}/data/${{ matrix.arch }}/hello_world
      - name: Run loader (release, x86_64)
        if: matrix.arch == 'x86_64'
        run: |
          qemu-system-x86_64 \
            -cpu qemu64,apic,fsgsbase,fxsr,rdrand,rdtscp,xsave,xsaveopt \
            -smp 1 -m 64M \
            -device isa-debug-exit,iobase=0xf4,iosize=0x04 \
            -display none -serial stdio \
            -kernel target/x86_64/release/rusty-loader \
            -initrd data/x86_64/hello_world
      - name: Run loader (release, aarch64)
        if: matrix.arch == 'aarch64'
        run: |
          qemu-system-aarch64 \
            -machine virt,gic-version=max -cpu cortex-a72 -smp 1 -m 512M \
            -display none -serial stdio -semihosting \
            -kernel target/aarch64/release/rusty-loader
    


